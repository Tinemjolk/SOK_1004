---
title: "SOK-1004 H24 - Case 5"
author: "2"
format: html
editor: visual
---

# Instruksjoner

Denne oppgaven er laget av Even S. Hvinden og oppdatert av Derek J. Clark. Sistnevnte er ansvarlig for eventuelle feil og mangler.

Oppgaven skal løses interaktivt i RStudio ved å legge inn egen kode og kommentarer. Det ferdige dokumentet lagres med kandidatnummeret som navn `[kandidatnummer]_SOK1004_C5_H24.qmd` og lastes opp på deres GitHub-side. Hvis du har kandidatnummer 43, så vil filen hete `43_SOK1004_C5_H24.qmd`. Påse at koden kjører og at dere kan eksportere besvarelsen til pdf. Lever så lenken til GitHub-repositoriumet i Canvas.

# Bakgrunn, læringsmål

I Forelesning 7 leste dere [kapittel 1 i NOU 2015:1](https://www.regjeringen.no/contentassets/ef2418d9076e4423ab5908689da67700/no/pdfs/nou201520150001000dddpdfs.pdf) "Produktivitet - grunnlag for vekst og velferd." I denne oppgaven skal vi oppdatere tall brukt i analysen. Gjennom arbeidet vil dere repetere de grunnleggende ferdighetene i bruk av API, `tidyverse` og `ggplot` som vi har arbeidet med gjennom kurset. Dere vil også få anledning til å reflektere rundt sammenhengene i nasjonalregnskapet og å grave litt i statistikkbanken hos SSB.

# Last inn pakker

```{r}
# output | false
rm(list=ls()) 
library(tidyverse)
library(rjstat)
library(httr)
```

# Oppgave I: Timeverksproduktivitet i markedsrettede fastlandsnæringer

Reproduser en oppdatert versjon av Figur 1.1 "Timeverksproduktivitet, markedsrettede fastlandsnæringer" i rapporten. Her er produktivitet målt som bruttoprodukt i markedsrettet produksjon i Fastlands-Norge per timeverk, utenom bolig.

## Oppgave Ia

Hvorfor trekker Produktivitetskommisjon fra produksjonen av boligtjenester, offentlig etterspørsel, og inntekter fra olje og gass når de beregner produktivitet?

*\[Svar på oppgave Ia her\]*

Produktivitetskommisjonen trekker fra produksjonen av boligtjenester, offentlig etterspørsel og inntekter fra olje og gass når de beregner produktivitet av flere årsaker:

-   **Boligtjenester:** Produksjonen av boligtjenester omsettes vanligvis ikke i åpne markeder. Verdien av boligtjenester er derfor i stor grad basert på kostnader, noe som ikke nødvendigvis reflekterer den faktiske produktiviteten.

-   **Offentlig etterspørsel:** Produksjonen i offentlig sektor omsettes heller ikke i åpne markeder, og verdien er ofte basert på kostnader. Dette kan gi et misvisende bilde av produktiviteten, da det ikke nødvendigvis er en klar sammenheng mellom kostnader og produksjon.

-   **Olje og gass:** En stor del av produksjonsverdien i olje- og gassnæringen kan være grunnrente. Dette gjør det vanskelig å sammenligne produktiviteten i denne næringen med andre næringer, både nasjonalt og internasjonalt.

Ved å utelate disse sektorene fra beregningene, får man et mer nøyaktig bilde av produktiviteten i de næringene som er eksponert for konkurranse i åpne markeder. Dette gir et bedre grunnlag for å sammenligne produktivitet på tvers av land og næringer.

## Oppgave Ib

Skriv kode som bruker en JSON-spørring til å lage en oppdatert versjon av figuren, med observasjoner fra 1996 til 2022. Beregn gjennomsnittlig årlig endring for perioden 1996 - 2005 og, 2005-2013, og 2006 - 2022. Står konklusjonen i rapporten seg?

**Merknad.** Det er tidvis store revisjoner i nasjonalregnskapet. Du må regne med at individuelle tall på årlig endring kan avvike en god del, opp til et halvt prosentpoeng, mens de gjennomsnittlige veksttallene burde avvike noe mindre.

**Tips:** Du henter data på timeverk og bruttoprodukt fra henholdsvis tabell 09174 og 09170.

```{r}
# løs oppgave 1b her
url_1 <- "https://data.ssb.no/api/v0/no/table/09174/"

query_1 <- '{
  "query": [
    {
      "code": "NACE",
      "selection": {
        "filter": "vs:NRNaeringPubAgg",
        "values": [
          "nr23fn"
        ]
      }
    },
    {
      "code": "ContentsCode",
      "selection": {
        "filter": "item",
        "values": [
          "TimeverkL"
        ]
      }
    },
    {
      "code": "Tid",
      "selection": {
        "filter": "item",
        "values": [
          "1996",
          "1997",
          "1998",
          "1999",
          "2000",
          "2001",
          "2002",
          "2003",
          "2004",
          "2005",
          "2006",
          "2007",
          "2008",
          "2009",
          "2010",
          "2011",
          "2012",
          "2013",
          "2014",
          "2015",
          "2016",
          "2017",
          "2018",
          "2019",
          "2020",
          "2021",
          "2022",
          "2023"
        ]
      }
    }
  ],
  "response": {
    "format": "json-stat2"
  }
}'

hent_indeks_1.tmp <- url_1 %>%
  POST(body = query_1, encode = "json")

df_1 <- hent_indeks_1.tmp %>%
  content("text") %>%
  fromJSONstat() %>%
  as_tibble()

df_1 <- df_1 %>% 
  # Endrer navn på kolonnene
  rename(stat = statistikkvariabel, verdi = value)
```

```{r}
url_2 <- 'https://data.ssb.no/api/v0/no/table/09170/'

query_2 <- '{
  "query": [
    {
      "code": "NACE",
      "selection": {
        "filter": "vs:NRNaeringPubAgg",
        "values": [
          "nr23fn"
        ]
      }
    },
    {
      "code": "ContentsCode",
      "selection": {
        "filter": "item",
        "values": [
          "BNPB2"
        ]
      }
    },
    {
      "code": "Tid",
      "selection": {
        "filter": "item",
        "values": [
          "1996",
          "1997",
          "1998",
          "1999",
          "2000",
          "2001",
          "2002",
          "2003",
          "2004",
          "2005",
          "2006",
          "2007",
          "2008",
          "2009",
          "2010",
          "2011",
          "2012",
          "2013",
          "2014",
          "2015",
          "2016",
          "2017",
          "2018",
          "2019",
          "2020",
          "2021",
          "2022",
          "2023"
        ]
      }
    }
  ],
  "response": {
    "format": "json-stat2"
  }
}'

hent_indeks_2.tmp <- url_2 %>%
  POST(body = query_2, encode = "json")

df_2 <- hent_indeks_2.tmp %>%
  content("text") %>%
  fromJSONstat() %>%
  as_tibble()

df_2 <- df_2 %>% 
  # Endrer navn på kolonnene
  rename(stat = statistikkvariabel, verdi = value) %>%
  # Fjerner rader med "Boligtjenester, egen bolig"
  filter(næring != "Boligtjenester, egen bolig")  
```

```{r}
# Utfører en inner join av 'df_1' og 'df_2' basert på kolonnene "år" og "næring".
df_combined <- inner_join(df_1, df_2, by = c("år", "næring"))

# Flytter "år"-kolonnen til høyre i 'df_combined'.
df_combined <- df_combined %>% 
  select(-år, år) 

# Endrer "år"-kolonnen til integer i 'df_combined'.
df_combined$år <- as.integer(df_combined$år) 

# Konverterer 'verdi.y' til numeric i 'df_combined'.
df_combined$verdi.y <- as.numeric(df_combined$verdi.y) 

# Omsmelter 'df_combined' til langt format.
df_long <- df_combined %>% 
  pivot_longer(
    cols = starts_with('stat') | starts_with('verdi'), 
    names_to = c('.value', 'kilde'), 
    names_sep = '\\.'
  )

# Endrer verdier i 'stat'-kolonnen i 'df_long'.
df_long <- df_long %>%
  mutate(
    stat = ifelse(stat == "Utførte timeverk for lønnstakere (mill. timeverk)", "Utførte timeverk i mill", stat), 
    stat = ifelse(stat == "Bruttoprodukt i basisverdi. Faste 2015-priser (mill. kr)", "Brutto i mill", stat) 
  )

# Omsmelter df_long til bredt format.
df_wide <- df_long %>% 
  pivot_wider(names_from = c(kilde, stat), values_from = verdi) 

# Beregner timeverksproduktivitet
df_wide <- df_wide %>%
  rename(utførte_timeverk = `x_Utførte timeverk i mill`, brutto = `y_Brutto i mill`) %>% 
  mutate(
    timeverksproduktivitet = brutto / utførte_timeverk 
  )

# Beregner referanseverdi (timeverksproduktivitet i 2015).
referanseverdi <- df_wide %>% 
  filter(år == 2015) %>% 
  pull(timeverksproduktivitet) 

# Beregner timeverksproduktivitet i prosent
df_wide <- df_wide %>%
  mutate(
    timeverksproduktivitet_prosent = (timeverksproduktivitet / referanseverdi) * 100 
  )

# Beregn vekst i timeverksproduktivitet_prosent
df_wide <- df_wide %>%
  arrange(år) %>% 
  mutate(
    vekst_prosent = (timeverksproduktivitet_prosent - lag(timeverksproduktivitet_prosent)) / lag(timeverksproduktivitet_prosent) * 100) %>% 
  fill(vekst_prosent, .direction = "down")

# Beregner gjennomsnittlig årlig endring (bruk vekst_prosent).
gjennomsnitt_96_05 <- mean(df_wide$vekst_prosent[df_wide$år >= 1996 & df_wide$år <= 2005], na.rm = TRUE) 
gjennomsnitt_06_13 <- mean(df_wide$vekst_prosent[df_wide$år >= 2006 & df_wide$år <= 2013], na.rm = TRUE) 
gjennomsnitt_13_22 <- mean(df_wide$vekst_prosent[df_wide$år >= 2013 & df_wide$år <= 2022], na.rm = TRUE) 
```

```{r}
# Plotter dataene.
df_wide %>%  
  ggplot(aes(x = år, y = vekst_prosent)) + 

  # Lager søylediagram med fargen som matcher den grafen som skulle kopieres.
  geom_col(fill = "steelblue") +  
  
  # Legger til linjer for gjennomsnittlig vekst i periodene 1996-2005, 2006-2013 og 2013-2022.
  geom_segment(aes(x = 1996, xend = 2005, y = gjennomsnitt_96_05, yend = gjennomsnitt_96_05), color = "black") + 
  geom_segment(aes(x = 2005, xend = 2013, y = gjennomsnitt_06_13, yend = gjennomsnitt_06_13), color = "black") +
  geom_segment(aes(x = 2006, xend = 2022, y = gjennomsnitt_13_22, yend = gjennomsnitt_13_22), color = "black") +

  # Legger til tekst som viser gjennomsnittsverdiene for hver periode.
  geom_text(aes(x = 2000.5, y = gjennomsnitt_96_05 + 0.5, label = round(gjennomsnitt_96_05, 2)), color = "black") + 
  geom_text(aes(x = 2009.5, y = gjennomsnitt_06_13 + 0.5, label = round(gjennomsnitt_06_13, 2)), color = "black") + 
  geom_text(aes(x = 2017.5, y = gjennomsnitt_13_22 + 0.5, label = round(gjennomsnitt_13_22, 2)), color = "black") + 

  # Setter tittel og navn på aksene.
  labs(
    title = "Timeverksproduktivitet, markedsrettede fastlandsnæringer", 
    x = "År",
    y = "Prosentvis endring fra året før"
  ) +

  # Bruker et minimalistisk tema og fjerner rutenett.
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    panel.grid = element_blank()
  ) +

  # Justerer y-aksegrensene og intervallene.
  coord_cartesian(ylim = c(-3, 9)) + 
  scale_x_continuous(breaks = df_wide$år) +
  scale_y_continuous(breaks = seq(-3, 9, by = 1)) 
```
